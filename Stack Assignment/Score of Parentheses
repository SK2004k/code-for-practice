class Solution {
public:
    int scoreOfParentheses(string s) {
        stack<string>st;
        int n=s.size();
        for(int i=0;i<n;i++)
        {
            if(s[i]==')')
            {
                if(st.top()=="(")
                {
                    st.pop();
                    st.push("1");
                }
                else
                {
                    long long k=0,t = stoll(st.top());
                  k = t;
                    
                    st.pop();
                    
                   while(st.top()!="(")
                   {
                        long long t = stoll(st.top());
                       k+=t;
                       st.pop();    
                   }
                    st.pop();
                    string tem= to_string(k*2);
                    st.push(tem);
                }
                cout<<st.top()<<endl;
            }
            else
            {
               string tem;
                tem += s[i];
                st.push(tem);
            }
        }
         long long ans =0;
        if(st.size()>=2)
        { while(!st.empty())
        {
            if(st.top()!="(")
            ans+= stoll(st.top());
            if(st.top()=="(")
                ans *=2;
            st.pop();
        }
        
        return ans;}
        return stoll(st.top());
    }
};
